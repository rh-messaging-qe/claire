# Build variables
ARG ubiVersion=9
ARG openJDKVersion=17
ARG ubiTag=latest
ARG image=registry.access.redhat.com/ubi${ubiVersion}/openjdk-${openJDKVersion}:${ubiTag}
ARG claireUser=claire
ARG claireUserUid=1000
ARG claireUserGroup=root
ARG appDir=/app
ARG buildDir=/build
ARG mvnCommonOpts="-Daether.connector.https.securityMode=insecure"
ARG buildMvnOpts="${mvnCommonOpts} \
    -Dmaven.repo.local=${buildDir}/.m2/repository"
ARG mvnOpts="${mvnCommonOpts} \
    -Dmaven.repo.local=${appDir}/.m2/repository"
ARG buildArch=amd64

####################
# Base image stage #
####################
FROM $image AS base

# Build variables
# If value is not defined and not provided on build-arg parameter,
# the default values from the top of this file will be used
ARG buildArch
ARG claireUser
ARG claireUserUid
ARG claireUserGroup
ARG appDir

# Use a root user
USER root

# Set locale
RUN sed -i 's/^LANG=.*/LANG="en_US.utf8"/' /etc/locale.conf
ENV LANG=en_US.utf8

# Install required packages
RUN microdnf --assumeyes --nodocs upgrade && \
    microdnf --assumeyes --nodocs install git glibc-langpack-en gzip jq make unzip wget && \
    microdnf clean all && \
    curl -sL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_${buildArch} -o /usr/bin/yq && \
    chmod +x /usr/bin/yq && \
    mkdir /opt/ocp-client && \
    curl -sSL https://mirror.openshift.com/pub/openshift-v4/${buildArch}/clients/ocp/latest/openshift-client-linux.tar.gz | \
    tar -zx -C /opt/ocp-client && \
    ln -s /opt/ocp-client/oc /usr/local/bin/oc && \
    ln -s /opt/ocp-client/kubectl /usr/local/bin/kubectl && \
    curl -sSL https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz | \
    tar -zx -C /opt && ln -s /opt/apache-maven-3.9.9/bin/mvn /usr/local/bin/mvn

# Create claire user
RUN useradd -u ${claireUserUid} -d ${appDir} -m -g ${claireUserGroup} ${claireUser} && \
    chmod 0775 ${appDir}

######################
# Dependencies stage #
######################
FROM base as dependencies
# Build variables
# If value is not defined and not provided on build-arg parameter,
# the default values from the top of this file will be used
ARG buildMvnOpts
ARG buildDir
ARG makeParams=

WORKDIR ${buildDir}

# Build dependency common
COPY Makefile* ${buildDir}/
COPY pom.xml ${buildDir}/
COPY common/pom.xml ${buildDir}/common/
COPY operator-suite/pom.xml ${buildDir}/operator-suite/
COPY standalone-suite/pom.xml ${buildDir}/standalone-suite/
RUN make ${makeParams} clean common_build MVN_ADDITIONAL_PARAMS="${buildMvnOpts}"

# cache dependencies
RUN make ${makeParams} operator_get_dependencies MVN_ADDITIONAL_PARAMS="${buildMvnOpts}"

###############
# Build stage #
###############
FROM base as build

# Build variables
# If value is not defined and not provided on build-arg parameter,
# the default values from the top of this file will be used
ARG buildMvnOpts
ARG buildDir
ARG makeParams=

WORKDIR ${buildDir}

# Copy cached dependencies
COPY --from=dependencies ${buildDir}/.m2 ${buildDir}/.m2

# Copy application files and set the working directory
COPY . ${buildDir}

#  build operator suite
RUN make ${makeParams} operator_build MVN_ADDITIONAL_PARAMS="--offline ${buildMvnOpts}" && \
    rm -rf common.yaml README.md

###############
# Final stage #
###############
FROM base AS final

# Build variables
# If value is not defined and not provided on build-arg parameter,
# the default values from the top of this file will be used
ARG claireUser
ARG claireUserUid
ARG claireUserGroup
ARG appDir
ARG mvnOpts
arg buildDir
ARG commitId

# Add metadata labels
LABEL name="Red Hat AMQ Broker QE - Claire Test Suite"

# Set maven options with local repo from /app
ENV MAVEN_OPTS=${mvnOpts}

# Set user environment variables
ENV CLAIRE_USER=${claireUser}
ENV CLAIRE_USER_UID=${claireUserUid}
ENV CLAIRE_USER_GROUP=${claireUserGroup}

# Set app environment variables
ENV APP_DIR=${appDir}

# Allow the user to choose which client to use
ENV CLIENT_TYPE=${CLIENT_TYPE:-kubectl}

# Set environment variables for OpenShift
ENV OCP_API_URL=https://api.openshift:6443
ENV OCP_USERNAME=CHANGE_ME
ENV OCP_PASSWORD=CHANGE_ME

# Set home directory
ENV HOME=${appDir}

# Set the working directory
WORKDIR ${appDir}

# Use a non-root user
USER ${claireUserUid}

# Set the entrypoint and default command
ENTRYPOINT ["${APP_DIR}/operator-suite/container/entrypoint.sh"]
CMD ["/bin/bash"]

# Set the current commit id
ENV COMMIT_ID=${commitId}

# Copy cliare files
COPY --from=build --chown=${claireUserUid}:${claireUserGroup} ${buildDir} ${appDir}

# Set permissions
RUN mkdir -p ${appDir}/test-results && \
    chmod 0775 ${appDir} && \
    find ${appDir} -type f -exec chmod 0664 \{\} \; && \
    find ${appDir} -type d -exec chmod 0775 \{\} \; && \
    find ${appDir} -name *.sh -exec chmod 0775 \{\} \;

